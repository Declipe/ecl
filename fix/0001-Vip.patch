From a35458c943639309310e20253e07485f0aab4300 Mon Sep 17 00:00:00 2001
From: Neket007 <neket007wow@gmail.com>
Date: Sat, 28 Jul 2012 17:05:02 +1000
Subject: [PATCH] =?UTF-8?q?[=D0=9C=D0=BE=D0=B4]:=20=D0=98=D0=BC=D0=BF=D0=BB=D0?=
 =?UTF-8?q?=B5=D0=BC=D0=B5=D0=BD=D1=82=D0=B0=D1=86=D0=B8=D1=8F=20Vip=20=D0=B0?=
 =?UTF-8?q?=D0=BA=D0=BA=D0=B0=D1=83=D0=BD=D1=82=D0=BE=D0=B2=20=D1=81=20=D0=BA?=
 =?UTF-8?q?=D0=BE=D0=BC=D0=B0=D0=BD=D0=B4=D0=B0=D0=BC=D0=B8?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 sql/update/auth/2012_07_28_00_account_premium.sql  |    8 +
 sql/update/world/2012_07_28_01_vip_commands.sql    |   15 ++
 src/server/authserver/Server/AuthSocket.cpp        |    3 +
 src/server/game/Entities/Player/Player.cpp         |   10 +
 src/server/game/Miscellaneous/Formulas.h           |    4 +-
 src/server/game/Miscellaneous/Language.h           |    5 +
 src/server/game/Reputation/ReputationMgr.cpp       |    4 +
 src/server/game/Scripting/ScriptLoader.cpp         |    2 +
 src/server/game/Server/WorldSession.cpp            |    4 +-
 src/server/game/Server/WorldSession.h              |    5 +-
 src/server/game/Server/WorldSocket.cpp             |   16 +-
 src/server/game/World/World.cpp                    |   14 +
 src/server/game/World/World.h                      |   12 +
 src/server/scripts/Commands/CMakeLists.txt         |    1 +
 src/server/scripts/Commands/cs_vip.cpp             |  285 ++++++++++++++++++++
 .../Database/Implementation/LoginDatabase.cpp      |    1 +
 .../shared/Database/Implementation/LoginDatabase.h |    1 +
 src/server/worldserver/worldserver.conf            |   35 +++
 18 files changed, 420 insertions(+), 5 deletions(-)
 create mode 100644 sql/update/auth/2012_07_28_00_account_premium.sql
 create mode 100644 sql/update/world/2012_07_28_01_vip_commands.sql
 create mode 100644 src/server/scripts/Commands/cs_vip.cpp

diff --git a/sql/update/auth/2012_07_28_00_account_premium.sql b/sql/update/auth/2012_07_28_00_account_premium.sql
new file mode 100644
index 0000000..df317ed
--- /dev/null
+++ b/sql/update/auth/2012_07_28_00_account_premium.sql
@@ -0,0 +1,8 @@
+CREATE TABLE IF NOT EXISTS `account_premium` (
+  `id` int(11) NOT NULL default '0' COMMENT 'Account id',
+  `setdate` bigint(40) NOT NULL default '0',
+  `unsetdate` bigint(40) NOT NULL default '0',
+  `premium_type` tinyint(4) unsigned NOT NULL default '1',
+  `active` tinyint(4) NOT NULL default '1',
+  PRIMARY KEY  (`id`,`setdate`)
+) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='Premium Accounts';
\ No newline at end of file
diff --git a/sql/update/world/2012_07_28_01_vip_commands.sql b/sql/update/world/2012_07_28_01_vip_commands.sql
new file mode 100644
index 0000000..6157c1b
--- /dev/null
+++ b/sql/update/world/2012_07_28_01_vip_commands.sql
@@ -0,0 +1,15 @@
+DELETE FROM `trinity_string` WHERE `entry` IN (11007,11008,11009,11010,11011,11012);
+INSERT INTO `trinity_string`(`entry`,`content_default`, `content_loc8`) VALUES 
+(11009, 'You can\`t do this at the moment.', 'Вы не можете сделать это сейчас.'),
+(11007,'You are not VIP.', 'Вы не владеете правами VIP аккаунта.'),
+(11008,'You are not VIP.', 'Вам недоступна эта VIP команда.');
+
+DELETE FROM `command` WHERE `name` IN ('vip debuff', 'vip bank', 'vip repair', 'vip resettalents', 'vip taxi', 'vip home', 'vip capital');
+INSERT INTO `command` VALUES
+('vip debuff', 0, 'Player debuff all spells'),
+('vip bank', 0, 'Player open bank'),
+('vip repair', 0, 'Repair all items'),
+('vip resettalents', 0, 'Player reset talents'),
+('vip taxi', 0, 'Player open all taxinode'),
+('vip home', 0, 'Player teleport to home'),
+('vip capital', 0, 'Player teleport to capital');
\ No newline at end of file
diff --git a/src/server/authserver/Server/AuthSocket.cpp b/src/server/authserver/Server/AuthSocket.cpp
index 15555e4..4bde68d 100644
--- a/src/server/authserver/Server/AuthSocket.cpp
+++ b/src/server/authserver/Server/AuthSocket.cpp
@@ -358,6 +358,9 @@ bool AuthSocket::_HandleLogonChallenge()
     // Verify that this IP is not in the ip_banned table
     LoginDatabase.Execute(LoginDatabase.GetPreparedStatement(LOGIN_DEL_EXPIRED_IP_BANS));
 
+    // Vip Account
+    LoginDatabase.Execute(LoginDatabase.GetPreparedStatement(LOGIN_SET_ACCOUNT_PREMIUM));
+
     const std::string& ip_address = socket().getRemoteAddress();
     PreparedStatement *stmt = LoginDatabase.GetPreparedStatement(LOGIN_SEL_IP_BANNED);
     stmt->setString(0, ip_address);
diff --git a/src/server/game/Entities/Player/Player.cpp b/src/server/game/Entities/Player/Player.cpp
index f8e8d62..dff3bdb 100644
--- a/src/server/game/Entities/Player/Player.cpp
+++ b/src/server/game/Entities/Player/Player.cpp
@@ -6977,6 +6977,9 @@ void Player::CheckAreaExploreAndOutdoor()
                     XP = uint32(sObjectMgr->GetBaseXP(areaEntry->area_level)*sWorld->getRate(RATE_XP_EXPLORE));
                 }
 
+                if (GetSession()->IsPremium())
+                    XP *= sWorld->getRate(RATE_XP_EXPLORE_PREMIUM);
+
                 GiveXP(XP, NULL);
                 SendExplorationExperience(area, XP);
             }
@@ -7308,6 +7311,10 @@ bool Player::RewardHonor(Unit* uVictim, uint32 groupsize, int32 honor, bool pvpt
     }
 
     honor_f *= sWorld->getRate(RATE_HONOR);
+
+    if (GetSession()->IsPremium())
+        honor_f *= sWorld->getRate(RATE_HONOR_PREMIUM);
+
     // Back to int now
     honor = int32(honor_f);
     // honor - for show honor points in log
@@ -15225,6 +15232,9 @@ void Player::RewardQuest(Quest const* quest, uint32 reward, Object* questGiver,
     for (Unit::AuraEffectList::const_iterator i = ModXPPctAuras.begin(); i != ModXPPctAuras.end(); ++i)
         AddPctN(XP, (*i)->GetAmount());
 
+    if (GetSession()->IsPremium())
+        XP *= sWorld->getRate(RATE_XP_QUEST_PREMIUM);
+
     int32 moneyRew = 0;
     if (getLevel() < sWorld->getIntConfig(CONFIG_MAX_PLAYER_LEVEL))
         GiveXP(XP, NULL);
diff --git a/src/server/game/Miscellaneous/Formulas.h b/src/server/game/Miscellaneous/Formulas.h
index bf00514..cfec0df 100644
--- a/src/server/game/Miscellaneous/Formulas.h
+++ b/src/server/game/Miscellaneous/Formulas.h
@@ -178,7 +178,9 @@ namespace Trinity
                         gain *= 2;
                 }
 
-                gain = uint32(gain * sWorld->getRate(RATE_XP_KILL));
+                float premium_rate = player->GetSession()->IsPremium() ? sWorld->getRate(RATE_XP_KILL_PREMIUM) : 1.0f;
+
+                return uint32(gain*sWorld->getRate(RATE_XP_KILL)*premium_rate);
             }
 
             sScriptMgr->OnGainCalculation(gain, player, u);
diff --git a/src/server/game/Miscellaneous/Language.h b/src/server/game/Miscellaneous/Language.h
index aec7283..d60b7c9 100644
--- a/src/server/game/Miscellaneous/Language.h
+++ b/src/server/game/Miscellaneous/Language.h
@@ -1068,6 +1068,11 @@ enum TrinityStrings
     LANG_AUTO_BROADCAST                 = 11000,
     LANG_INVALID_REALMID                = 11001,
 
+    // Vip Commands
+	LANG_PLAYER_NOT_VIP                 = 11007,
+	LANG_VIP_COMMAND_DISABLED           = 11008,
+	LANG_VIP_ERROR                      = 11009,
+
     // NOT RESERVED IDS                   12000-1999999999
     // `db_script_string` table index     2000000000-2000009999 (MIN_DB_SCRIPT_STRING_ID-MAX_DB_SCRIPT_STRING_ID)
     // For other tables maybe             2000010000-2147483647 (max index)
diff --git a/src/server/game/Reputation/ReputationMgr.cpp b/src/server/game/Reputation/ReputationMgr.cpp
index 94a6590..08179a8 100644
--- a/src/server/game/Reputation/ReputationMgr.cpp
+++ b/src/server/game/Reputation/ReputationMgr.cpp
@@ -362,6 +362,10 @@ bool ReputationMgr::SetOneFactionReputation(FactionEntry const* factionEntry, in
         {
             // int32 *= float cause one point loss?
             standing = int32(floor((float)standing * sWorld->getRate(RATE_REPUTATION_GAIN) + 0.5f));
+
+            if(_player->GetSession()->IsPremium())
+                standing = int32(floor((float)standing * sWorld->getRate(RATE_REPUTATION_GAIN_PREMIUM) + 0.5f));
+
             standing += itr->second.Standing + BaseRep;
         }
 
diff --git a/src/server/game/Scripting/ScriptLoader.cpp b/src/server/game/Scripting/ScriptLoader.cpp
index dcd8d52..ea77dce 100644
--- a/src/server/game/Scripting/ScriptLoader.cpp
+++ b/src/server/game/Scripting/ScriptLoader.cpp
@@ -63,6 +63,7 @@ void AddSC_tele_commandscript();
 void AddSC_ticket_commandscript();
 void AddSC_titles_commandscript();
 void AddSC_wp_commandscript();
+void AddSC_vip_commandscript();
 
 #ifdef SCRIPTS
 //world
@@ -664,6 +665,7 @@ void AddCommandScripts()
     AddSC_ticket_commandscript();
     AddSC_titles_commandscript();
     AddSC_wp_commandscript();
+    AddSC_vip_commandscript();
 }
 
 void AddWorldScripts()
diff --git a/src/server/game/Server/WorldSession.cpp b/src/server/game/Server/WorldSession.cpp
index 81ec549..a8e75bb 100644
--- a/src/server/game/Server/WorldSession.cpp
+++ b/src/server/game/Server/WorldSession.cpp
@@ -88,9 +88,9 @@ bool WorldSessionFilter::Process(WorldPacket* packet)
 }
 
 /// WorldSession constructor
-WorldSession::WorldSession(uint32 id, WorldSocket* sock, AccountTypes sec, uint8 expansion, time_t mute_time, LocaleConstant locale, uint32 recruiter, bool isARecruiter):
+WorldSession::WorldSession(uint32 id, WorldSocket* sock, AccountTypes sec, bool ispremium, uint8 expansion, time_t mute_time, LocaleConstant locale, uint32 recruiter, bool isARecruiter):
 m_muteTime(mute_time), m_timeOutTime(0), _player(NULL), m_Socket(sock),
-_security(sec), _accountId(id), m_expansion(expansion), _logoutTime(0),
+_security(sec), _ispremium(ispremium), _accountId(id), m_expansion(expansion), _logoutTime(0),
 m_inQueue(false), m_playerLoading(false), m_playerLogout(false),
 m_playerRecentlyLogout(false), m_playerSave(false),
 m_sessionDbcLocale(sWorld->GetAvailableDbcLocale(locale)),
diff --git a/src/server/game/Server/WorldSession.h b/src/server/game/Server/WorldSession.h
index b8b0953..17d30e3 100644
--- a/src/server/game/Server/WorldSession.h
+++ b/src/server/game/Server/WorldSession.h
@@ -215,7 +215,7 @@ class CharacterCreateInfo
 class WorldSession
 {
     public:
-        WorldSession(uint32 id, WorldSocket* sock, AccountTypes sec, uint8 expansion, time_t mute_time, LocaleConstant locale, uint32 recruiter, bool isARecruiter);
+        WorldSession(uint32 id, WorldSocket* sock, AccountTypes sec, bool ispremium, uint8 expansion, time_t mute_time, LocaleConstant locale, uint32 recruiter, bool isARecruiter);
         ~WorldSession();
 
         bool PlayerLoading() const { return m_playerLoading; }
@@ -244,6 +244,7 @@ class WorldSession
         void SendClientCacheVersion(uint32 version);
 
         AccountTypes GetSecurity() const { return _security; }
+        bool IsPremium() const { return _ispremium; }
         uint32 GetAccountId() const { return _accountId; }
         Player* GetPlayer() const { return _player; }
         char const* GetPlayerName() const;
@@ -957,6 +958,8 @@ class WorldSession
         uint32 _accountId;
         uint8 m_expansion;
 
+        bool _ispremium;
+
         typedef std::list<AddonInfo> AddonsList;
 
         // Warden
diff --git a/src/server/game/Server/WorldSocket.cpp b/src/server/game/Server/WorldSocket.cpp
index 646e9c1..493eb6a 100644
--- a/src/server/game/Server/WorldSocket.cpp
+++ b/src/server/game/Server/WorldSocket.cpp
@@ -747,6 +747,9 @@ int WorldSocket::HandleAuthSession (WorldPacket& recvPacket)
     LocaleConstant locale;
     std::string account;
     SHA1Hash sha;
+
+    bool isPremium = false;
+
     BigNumber v, s, g, N;
     WorldPacket packet, SendAddonPacked;
 
@@ -898,6 +901,17 @@ int WorldSocket::HandleAuthSession (WorldPacket& recvPacket)
         return -1;
     }
 
+    QueryResult premresult =
+		LoginDatabase.PQuery ("SELECT 1 "
+                              "FROM account_premium "
+                              "WHERE id = '%u' "
+                              "AND active = 1",
+                              id);
+    if (premresult) // if account premium
+    {
+        isPremium = true;
+    }
+
     // Check locked state for server
     AccountTypes allowedAccountType = sWorld->GetPlayerSecurityLimit();
     sLog->outDebug(LOG_FILTER_NETWORKIO, "Allowed Level: %u Player Level %u", allowedAccountType, AccountTypes(security));
@@ -961,7 +975,7 @@ int WorldSocket::HandleAuthSession (WorldPacket& recvPacket)
     LoginDatabase.Execute(stmt);
 
     // NOTE ATM the socket is single-threaded, have this in mind ...
-    ACE_NEW_RETURN (m_Session, WorldSession (id, this, AccountTypes(security), expansion, mutetime, locale, recruiter, isRecruiter), -1);
+    ACE_NEW_RETURN (m_Session, WorldSession (id, this, AccountTypes(security), isPremium, expansion, mutetime, locale, recruiter, isRecruiter), -1);
 
     m_Crypt.Init(&k);
 
diff --git a/src/server/game/World/World.cpp b/src/server/game/World/World.cpp
index a191223..04066d8 100644
--- a/src/server/game/World/World.cpp
+++ b/src/server/game/World/World.cpp
@@ -458,8 +458,11 @@ void World::LoadConfigSettings(bool reload)
     rate_values[RATE_DROP_ITEM_REFERENCED_AMOUNT] = ConfigMgr::GetFloatDefault("Rate.Drop.Item.ReferencedAmount", 1.0f);
     rate_values[RATE_DROP_MONEY]  = ConfigMgr::GetFloatDefault("Rate.Drop.Money", 1.0f);
     rate_values[RATE_XP_KILL]     = ConfigMgr::GetFloatDefault("Rate.XP.Kill", 1.0f);
+    rate_values[RATE_XP_KILL_PREMIUM]    = ConfigMgr::GetFloatDefault("Rate.XP.Kill.Premium", 1.0f);
     rate_values[RATE_XP_QUEST]    = ConfigMgr::GetFloatDefault("Rate.XP.Quest", 1.0f);
+    rate_values[RATE_XP_QUEST_PREMIUM]   = ConfigMgr::GetFloatDefault("Rate.XP.Quest.Premium", 1.0f);
     rate_values[RATE_XP_EXPLORE]  = ConfigMgr::GetFloatDefault("Rate.XP.Explore", 1.0f);
+    rate_values[RATE_XP_EXPLORE_PREMIUM] = ConfigMgr::GetFloatDefault("Rate.XP.Explore.Premium", 1.0f);
     rate_values[RATE_REPAIRCOST]  = ConfigMgr::GetFloatDefault("Rate.RepairCost", 1.0f);
     if (rate_values[RATE_REPAIRCOST] < 0.0f)
     {
@@ -467,6 +470,7 @@ void World::LoadConfigSettings(bool reload)
         rate_values[RATE_REPAIRCOST] = 0.0f;
     }
     rate_values[RATE_REPUTATION_GAIN]  = ConfigMgr::GetFloatDefault("Rate.Reputation.Gain", 1.0f);
+    rate_values[RATE_REPUTATION_GAIN_PREMIUM]  = ConfigMgr::GetFloatDefault("Rate.Reputation.Gain.Premium", 1.0f);
     rate_values[RATE_REPUTATION_LOWLEVEL_KILL]  = ConfigMgr::GetFloatDefault("Rate.Reputation.LowLevel.Kill", 1.0f);
     rate_values[RATE_REPUTATION_LOWLEVEL_QUEST]  = ConfigMgr::GetFloatDefault("Rate.Reputation.LowLevel.Quest", 1.0f);
     rate_values[RATE_REPUTATION_RECRUIT_A_FRIEND_BONUS] = ConfigMgr::GetFloatDefault("Rate.Reputation.RecruitAFriendBonus", 0.1f);
@@ -494,6 +498,7 @@ void World::LoadConfigSettings(bool reload)
     rate_values[RATE_AUCTION_DEPOSIT] = ConfigMgr::GetFloatDefault("Rate.Auction.Deposit", 1.0f);
     rate_values[RATE_AUCTION_CUT] = ConfigMgr::GetFloatDefault("Rate.Auction.Cut", 1.0f);
     rate_values[RATE_HONOR] = ConfigMgr::GetFloatDefault("Rate.Honor", 1.0f);
+    rate_values[RATE_HONOR_PREMIUM] = ConfigMgr::GetFloatDefault("Rate.Honor.Premium", 1.0f);
     rate_values[RATE_MINING_AMOUNT] = ConfigMgr::GetFloatDefault("Rate.Mining.Amount", 1.0f);
     rate_values[RATE_MINING_NEXT]   = ConfigMgr::GetFloatDefault("Rate.Mining.Next", 1.0f);
     rate_values[RATE_INSTANCE_RESET_TIME] = ConfigMgr::GetFloatDefault("Rate.InstanceResetTime", 1.0f);
@@ -1207,6 +1212,15 @@ void World::LoadConfigSettings(bool reload)
     // Management for channels with flag CHANNEL_DBC_FLAG_CITY_ONLY
     m_bool_configs[CONFIG_CHANNEL_ON_CITY_ONLY_FLAG]  = ConfigMgr::GetBoolDefault("Channel.CityOnlyFlag", true);
 
+    // Vip Commands
+    m_bool_configs[CONFIG_VIP_DEBUFF_COMMAND] = ConfigMgr::GetBoolDefault("Vip.Debuff.Command", true);
+    m_bool_configs[CONFIG_VIP_BANK_COMMAND] = ConfigMgr::GetBoolDefault("Vip.Bank.Command", true);
+    m_bool_configs[CONFIG_VIP_REPAIR_COMMAND] = ConfigMgr::GetBoolDefault("Vip.Repair.Command", true);
+    m_bool_configs[CONFIG_VIP_RESET_TALENTS_COMMAND] = ConfigMgr::GetBoolDefault("Vip.Reset.Talents.Command", true);
+    m_bool_configs[CONFIG_VIP_TAXI_COMMAND] = ConfigMgr::GetBoolDefault("Vip.Taxi.Command", true);
+    m_bool_configs[CONFIG_VIP_HOME_COMMAND] = ConfigMgr::GetBoolDefault("Vip.Home.Command", true);
+    m_bool_configs[CONFIG_VIP_CAPITAL_COMMAND] = ConfigMgr::GetBoolDefault("Vip.Capital.Command", true);
+
     // call ScriptMgr if we're reloading the configuration
     if (reload)
         sScriptMgr->OnConfigLoad(reload);
diff --git a/src/server/game/World/World.h b/src/server/game/World/World.h
index 8671cb2..bcbb2cc 100644
--- a/src/server/game/World/World.h
+++ b/src/server/game/World/World.h
@@ -166,6 +166,13 @@ enum WorldBoolConfigs
     CONFIG_WARDEN_ENABLED,
     CONFIG_DUEL_RESET_ENABLE,
     CONFIG_CHANNEL_ON_CITY_ONLY_FLAG,
+    CONFIG_VIP_DEBUFF_COMMAND,
+    CONFIG_VIP_BANK_COMMAND,
+    CONFIG_VIP_REPAIR_COMMAND,
+    CONFIG_VIP_RESET_TALENTS_COMMAND,
+    CONFIG_VIP_TAXI_COMMAND,
+    CONFIG_VIP_HOME_COMMAND,
+    CONFIG_VIP_CAPITAL_COMMAND,
     BOOL_CONFIG_VALUE_COUNT
 };
 
@@ -346,10 +353,14 @@ enum Rates
     RATE_DROP_ITEM_REFERENCED_AMOUNT,
     RATE_DROP_MONEY,
     RATE_XP_KILL,
+    RATE_XP_KILL_PREMIUM,
     RATE_XP_QUEST,
+    RATE_XP_QUEST_PREMIUM,
     RATE_XP_EXPLORE,
+    RATE_XP_EXPLORE_PREMIUM,
     RATE_REPAIRCOST,
     RATE_REPUTATION_GAIN,
+    RATE_REPUTATION_GAIN_PREMIUM,
     RATE_REPUTATION_LOWLEVEL_KILL,
     RATE_REPUTATION_LOWLEVEL_QUEST,
     RATE_REPUTATION_RECRUIT_A_FRIEND_BONUS,
@@ -377,6 +388,7 @@ enum Rates
     RATE_AUCTION_DEPOSIT,
     RATE_AUCTION_CUT,
     RATE_HONOR,
+    RATE_HONOR_PREMIUM,
     RATE_MINING_AMOUNT,
     RATE_MINING_NEXT,
     RATE_TALENT,
diff --git a/src/server/scripts/Commands/CMakeLists.txt b/src/server/scripts/Commands/CMakeLists.txt
index bb7d27d..8a18dcb 100644
--- a/src/server/scripts/Commands/CMakeLists.txt
+++ b/src/server/scripts/Commands/CMakeLists.txt
@@ -37,6 +37,7 @@ set(scripts_STAT_SRCS
   Commands/cs_server.cpp
   Commands/cs_titles.cpp
   Commands/cs_wp.cpp
+  Commands/cs_vip.cpp
 #  Commands/cs_pdump.cpp
 #  Commands/cs_channel.cpp
 #  Commands/cs_pet.cpp
diff --git a/src/server/scripts/Commands/cs_vip.cpp b/src/server/scripts/Commands/cs_vip.cpp
new file mode 100644
index 0000000..e7e493a
--- /dev/null
+++ b/src/server/scripts/Commands/cs_vip.cpp
@@ -0,0 +1,285 @@
+/*
+* Copyright (C) 2008-2011 TrinityCore <http://www.trinitycore.org/>
+*
+* Copyright (C) 2012 JetCore <https://github.com/Neket007/Jet-Core>
+*
+* This program is free software; you can redistribute it and/or modify it
+* under the terms of the GNU General Public License as published by the
+* Free Software Foundation; either version 2 of the License, or (at your
+* option) any later version.
+*
+* This program is distributed in the hope that it will be useful, but WITHOUT
+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+* FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
+* more details.
+*
+* You should have received a copy of the GNU General Public License along
+* with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "ScriptMgr.h"
+#include "Common.h"
+#include "Chat.h"
+#include "Player.h"
+#include "World.h"
+#include "Config.h"
+#include "WorldSession.h"
+#include "Language.h"
+#include "Log.h"
+#include "SpellAuras.h"
+
+
+class vip_commandscript : public CommandScript
+{
+public:
+    vip_commandscript() : CommandScript("vip_commandscript") { }
+
+    ChatCommand* GetCommands() const
+    {
+        static ChatCommand vipCommandTable[] =
+        {
+            { "debuff",         SEC_PLAYER,         false, &HandleVipDebuffCommand,             "", NULL },
+            { "bank",           SEC_PLAYER,         false, &HandleVipBankCommand,               "", NULL },
+            { "repair",         SEC_PLAYER,         false, &HandleVipRepairCommand,             "", NULL },
+            { "resettalents",   SEC_PLAYER,         false, &HandleVipResetTalentsCommand,       "", NULL },
+            { "taxi",           SEC_PLAYER,         false, &HandleVipTaxiCommand,               "", NULL },
+            { "home",           SEC_PLAYER,         false, &HandleVipHomeCommand,               "", NULL },
+            { "capital",        SEC_PLAYER,         false, &HandleVipCapitalCommand,            "", NULL },
+            { NULL,             0,                  false, NULL,                                "", NULL }
+        };
+
+        static ChatCommand commandTable[] =
+        {
+            { "vip",            SEC_PLAYER,         false, NULL,                                "", vipCommandTable },
+            { NULL,             0,                  false, NULL,                                "", NULL }
+        };
+
+        return commandTable;
+    }
+
+	static bool HandleVipDebuffCommand(ChatHandler* handler, const char* /*args*/)
+    {   
+        Player *plr = handler->GetSession()->GetPlayer();
+
+		if (!handler->GetSession()->IsPremium())
+        {
+            handler->SendSysMessage(LANG_PLAYER_NOT_VIP);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        if (!sWorld->getBoolConfig(CONFIG_VIP_DEBUFF_COMMAND))
+        {
+            handler->SendSysMessage(LANG_VIP_COMMAND_DISABLED);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        if(plr->isInCombat() || plr->isInFlight() || plr->GetMap()->IsBattlegroundOrArena() || plr->HasStealthAura() || plr->HasFlag(UNIT_FIELD_FLAGS_2, UNIT_FLAG2_FEIGN_DEATH) || plr->isDead())
+        {
+            handler->SendSysMessage(LANG_VIP_ERROR);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        handler->GetSession()->GetPlayer()->RemoveAurasDueToSpell(15007);
+        handler->GetSession()->GetPlayer()->RemoveAurasDueToSpell(26013);
+
+        return true;
+    }
+	
+	static bool HandleVipBankCommand(ChatHandler* handler, const char* /*args*/)
+    {
+        Player *plr = handler->GetSession()->GetPlayer();
+
+        if (!handler->GetSession()->IsPremium())
+        {
+            handler->SendSysMessage(LANG_PLAYER_NOT_VIP);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+		
+		if (!sWorld->getBoolConfig(CONFIG_VIP_BANK_COMMAND))
+        {
+            handler->SendSysMessage(LANG_VIP_COMMAND_DISABLED);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+ 
+        if (plr->isInCombat() || plr->isInFlight() || plr->GetMap()->IsBattlegroundOrArena() || plr->HasStealthAura() || plr->HasFlag(UNIT_FIELD_FLAGS_2, UNIT_FLAG2_FEIGN_DEATH) || plr->isDead())
+        {
+            handler->SendSysMessage(LANG_VIP_ERROR);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        handler->GetSession()->SendShowBank(handler->GetSession()->GetPlayer()->GetGUID());
+
+        return true;
+    }
+
+    static bool HandleVipRepairCommand(ChatHandler* handler, const char* /*args*/)
+    {
+        Player *plr = handler->GetSession()->GetPlayer();
+
+        if (!handler->GetSession()->IsPremium())
+        {
+            handler->SendSysMessage(LANG_PLAYER_NOT_VIP);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        if (!sWorld->getBoolConfig(CONFIG_VIP_REPAIR_COMMAND))
+        {
+            handler->SendSysMessage(LANG_VIP_COMMAND_DISABLED);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        if (plr->isInCombat() || plr->isInFlight() || plr->GetMap()->IsBattlegroundOrArena() || plr->HasStealthAura() || plr->HasFlag(UNIT_FIELD_FLAGS_2, UNIT_FLAG2_FEIGN_DEATH) || plr->isDead())
+        {
+            handler->SendSysMessage(LANG_VIP_ERROR);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        handler->GetSession()->GetPlayer()->DurabilityRepairAll(false, 0, false);
+
+        handler->PSendSysMessage(LANG_YOUR_ITEMS_REPAIRED, handler->GetNameLink(handler->GetSession()->GetPlayer()).c_str());
+        return true;
+    }
+
+    static bool HandleVipResetTalentsCommand(ChatHandler* handler, const char* /*args*/)
+   {
+        Player *plr = handler->GetSession()->GetPlayer();
+
+        if (!handler->GetSession()->IsPremium())
+        {
+            handler->SendSysMessage(LANG_PLAYER_NOT_VIP);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        if (!sWorld->getBoolConfig(CONFIG_VIP_RESET_TALENTS_COMMAND))
+        {
+            handler->SendSysMessage(LANG_VIP_COMMAND_DISABLED);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        if (plr->isInCombat() || plr->isInFlight() || plr->GetMap()->IsBattlegroundOrArena() || plr->HasStealthAura() || plr->HasFlag(UNIT_FIELD_FLAGS_2, UNIT_FLAG2_FEIGN_DEATH) || plr->isDead())
+        {
+            handler->SendSysMessage(LANG_VIP_ERROR);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        plr->resetTalents(true);
+        plr->SendTalentsInfoData(false);
+		handler->PSendSysMessage(LANG_RESET_TALENTS_ONLINE, handler->GetNameLink(handler->GetSession()->GetPlayer()).c_str());
+        return true;
+    }
+
+    static bool HandleVipTaxiCommand(ChatHandler* handler, const char* /*args*/)
+    {
+        Player *plr = handler->GetSession()->GetPlayer();
+
+        if (!handler->GetSession()->IsPremium())
+        {
+            handler->SendSysMessage(LANG_PLAYER_NOT_VIP);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        if (!sWorld->getBoolConfig(CONFIG_VIP_TAXI_COMMAND))
+        {
+            handler->SendSysMessage(LANG_VIP_COMMAND_DISABLED);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        if (plr->isInCombat() || plr->isInFlight() || plr->GetMap()->IsBattlegroundOrArena() || plr->HasStealthAura() || plr->HasFlag(UNIT_FIELD_FLAGS_2, UNIT_FLAG2_FEIGN_DEATH) || plr->isDead())
+        {
+            handler->SendSysMessage(LANG_VIP_ERROR);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        plr->SetTaxiCheater(true);
+        handler->PSendSysMessage(LANG_YOU_GIVE_TAXIS, handler->GetNameLink(plr).c_str());
+        if (handler->needReportToTarget(plr))
+            ChatHandler(plr).PSendSysMessage(LANG_YOURS_TAXIS_ADDED, handler->GetNameLink().c_str());
+            
+		return true;
+    }
+
+    static bool HandleVipHomeCommand(ChatHandler* handler, const char* /*args*/)
+    {
+        Player *plr = handler->GetSession()->GetPlayer();
+
+        if (!handler->GetSession()->IsPremium())
+        {
+            handler->SendSysMessage(LANG_PLAYER_NOT_VIP);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        if (!sWorld->getBoolConfig(CONFIG_VIP_HOME_COMMAND))
+        {
+            handler->SendSysMessage(LANG_VIP_COMMAND_DISABLED);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        if (plr->isInCombat() || plr->isInFlight() || plr->GetMap()->IsBattlegroundOrArena() || plr->HasStealthAura() || plr->HasFlag(UNIT_FIELD_FLAGS_2, UNIT_FLAG2_FEIGN_DEATH) || plr->isDead())
+        {
+            handler->SendSysMessage(LANG_VIP_ERROR);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        plr->RemoveSpellCooldown(8690,true);
+        plr->CastSpell(plr,8690,false);
+
+        return true;
+    }
+
+    static bool HandleVipCapitalCommand(ChatHandler* handler, const char* /*args*/)
+  {
+        Player *plr = handler->GetSession()->GetPlayer();
+
+        if (!handler->GetSession()->IsPremium())
+        {
+            handler->SendSysMessage(LANG_PLAYER_NOT_VIP);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        if (!sWorld->getBoolConfig(CONFIG_VIP_CAPITAL_COMMAND))
+        {
+            handler->SendSysMessage(LANG_VIP_COMMAND_DISABLED);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        if (plr->isInCombat() || plr->isInFlight() || plr->GetMap()->IsBattlegroundOrArena() || plr->HasStealthAura() || plr->HasFlag(UNIT_FIELD_FLAGS_2, UNIT_FLAG2_FEIGN_DEATH) || plr->isDead())
+        {
+            handler->SendSysMessage(LANG_VIP_ERROR);
+            handler->SetSentErrorMessage(true);
+            return false;
+        }
+
+        if (plr->GetTeam() == HORDE)
+			plr->CastSpell(plr,3567,true);
+        else
+            plr->CastSpell(plr,3561,true);
+		
+		return true;
+    }
+	   
+};
+
+void AddSC_vip_commandscript()
+{
+    new vip_commandscript();
+}
\ No newline at end of file
diff --git a/src/server/shared/Database/Implementation/LoginDatabase.cpp b/src/server/shared/Database/Implementation/LoginDatabase.cpp
index 028d927..d4c0b3b 100644
--- a/src/server/shared/Database/Implementation/LoginDatabase.cpp
+++ b/src/server/shared/Database/Implementation/LoginDatabase.cpp
@@ -87,4 +87,5 @@ void LoginDatabaseConnection::DoPrepareStatements()
     PREPARE_STATEMENT(LOGIN_SEL_ACCOUNT_WHOIS, "SELECT username, email, last_ip FROM account WHERE id = ?", CONNECTION_SYNCH);
     PREPARE_STATEMENT(LOGIN_SEL_REALMLIST_SECURITY_LEVEL, "SELECT allowedSecurityLevel from realmlist WHERE id = ?", CONNECTION_SYNCH);
     PREPARE_STATEMENT(LOGIN_DEL_ACCOUNT, "DELETE FROM account WHERE id = ?", CONNECTION_ASYNC);
+    PREPARE_STATEMENT(LOGIN_SET_ACCOUNT_PREMIUM, "UPDATE account_premium SET active = 0 WHERE unsetdate<=UNIX_TIMESTAMP() AND unsetdate<>setdate", CONNECTION_ASYNC);
 }
diff --git a/src/server/shared/Database/Implementation/LoginDatabase.h b/src/server/shared/Database/Implementation/LoginDatabase.h
index 7c2a94e..7a01707 100644
--- a/src/server/shared/Database/Implementation/LoginDatabase.h
+++ b/src/server/shared/Database/Implementation/LoginDatabase.h
@@ -107,6 +107,7 @@ enum LoginDatabaseStatements
     LOGIN_SEL_ACCOUNT_WHOIS,
     LOGIN_SEL_REALMLIST_SECURITY_LEVEL,
     LOGIN_DEL_ACCOUNT,
+    LOGIN_SET_ACCOUNT_PREMIUM,
 
     MAX_LOGINDATABASE_STATEMENTS,
 };
diff --git a/src/server/worldserver/worldserver.conf b/src/server/worldserver/worldserver.conf
index d3ae34f..825cc56 100644
--- a/src/server/worldserver/worldserver.conf
+++ b/src/server/worldserver/worldserver.conf
@@ -2901,5 +2901,40 @@ Duel.Reset.Cooldown.Enable = 1
 
 Channel.CityOnlyFlag = 1
 
+# VIP CONFIG
+#
+#     Rate.XP.Kill.Premium
+#     Rate.XP.Quest.Premium
+#     Rate.XP.Explore.Premium
+#     Rate.Honor.Premium
+#     Rate.Reputation.Gain.Premium
+#        Description: Enables rates modifier to VIPs.
+#        Default:     1
+
+Rate.XP.Kill.Premium    = 1
+Rate.XP.Quest.Premium   = 1
+Rate.XP.Explore.Premium = 1
+Rate.Honor.Premium = 1
+Rate.Reputation.Gain.Premium = 1
+
+#     Vip.Debuff.Command = 1
+#     Vip.Bank.Command = 1
+#     Vip.Repair.Command = 1
+#     Vip.Reset.Talents.Command = 1
+#     Vip.Taxi.Command = 1
+#     Vip.Home.Command = 1
+#     Vip.Capital.Command = 1
+#        Description: Here you can enable or disable some VIP commands.
+#        Default:     1 - Enable
+#                     0 - Disable
+
+Vip.Debuff.Command = 1
+Vip.Bank.Command = 1
+Vip.Repair.Command = 1
+Vip.Reset.Talents.Command = 1
+Vip.Taxi.Command = 1
+Vip.Home.Command = 1
+Vip.Capital.Command = 1
+
 #
 ###################################################################################################
\ No newline at end of file
-- 
1.7.10.msysgit.1

